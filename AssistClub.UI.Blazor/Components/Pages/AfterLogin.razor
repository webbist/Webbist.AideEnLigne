@page "/after-login"
@using System.Security.Claims
@using AssistClub.UI.Blazor.HttpClients
@using AssistClub.UI.Blazor.Models
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies

@inject UserHttpClient UserHttpClient
@inject NavigationManager NavigationManager

<h3>AfterLogin</h3>

@code {
    [CascadingParameter]
    public HttpContext httpContext { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        var user = httpContext?.User;
        if (user == null || !user.Identity?.IsAuthenticated == true)
        {
            NavigationManager.NavigateTo("/sign-in");
            return;
        }
        
        var firstName = user.FindFirst(ClaimTypes.GivenName)?.Value ?? string.Empty;
        var lastName = user.FindFirst(ClaimTypes.Surname)?.Value ?? string.Empty;
        var email = user.FindFirst(ClaimTypes.Email)?.Value ?? string.Empty;
        var photo = user.FindFirst("urn:google:image")?.Value;
        
        var existingUser = await UserHttpClient.GetUserByEmail(email);
        if (existingUser == null)
        {
            var newUser = new UserApiRequest
            {
                Id = Guid.NewGuid(),
                Firstname = firstName,
                Lastname = lastName,
                Email = email,
                Photo = photo,
                Club = "Assist Club",
                Microsite = "https://assistclub.com",
                Role = Role.User
            };
            
            await UserHttpClient.CreateUser(newUser);
            existingUser = await UserHttpClient.GetUserByEmail(email);
        }
        
        if (existingUser == null)
        {
            NavigationManager.NavigateTo("/sign-in");
            return;
        }
        
        Claim[] claims =
        [
            new(ClaimTypes.NameIdentifier, existingUser.Id.ToString()),
            new(ClaimTypes.GivenName, existingUser.Fullname),
            new(ClaimTypes.Email, existingUser.Email),
            new("photo", existingUser.Photo ?? "images/default.jpeg"),
            new("club", existingUser.Club),
            new(ClaimTypes.Role, existingUser.Role.ToString())
        ];
        
        var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        var principal = new ClaimsPrincipal(identity);
        await httpContext.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme, principal);
        NavigationManager.NavigateTo("/");
    }
}